{
	"info": {
		"_postman_id": "ae543b0c-737f-445e-a82a-fcccda12a80a",
		"name": "Github",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "triggerOTPCode",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5acfd10c-beff-49fb-91ff-b60f6ca66385",
						"exec": [
							"setTimeout(() => {}, 8000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/authorizations",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"authorizations"
					]
				}
			},
			"response": []
		},
		{
			"name": "getTwilioSMS",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a03b1330-7642-4418-8c6d-d248c1b3490d",
						"exec": [
							"const response = pm.response.json();",
							"",
							"const otp = response.messages[0].body.substring(0,6);",
							"",
							"pm.globals.set(\"otpCode\", otp);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{twilioKey}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{twilioToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.twilio.com/2010-04-01/Accounts/:account/Messages.json",
					"protocol": "https",
					"host": [
						"api",
						"twilio",
						"com"
					],
					"path": [
						"2010-04-01",
						"Accounts",
						":account",
						"Messages.json"
					],
					"variable": [
						{
							"key": "account",
							"value": "{{twilioAccount}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "createGitHubRepository",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b1b5e4e3-0af3-4195-b0ad-8c7b2134a3b9",
						"exec": [
							"let randomString = Math.random().toString(31).substring(5);",
							"",
							"",
							"pm.environment.set(\"randomString\", randomString);",
							"pm.environment.set(\"repoName\", \"Test repository \" + randomString);",
							"pm.environment.set(\"repoDesc\", \"This is a test repository created by Postman\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "058db6ac-ab8c-4c0a-94dd-d116eb494a9d",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.environment.set(\"owner\", response.owner.login);",
							"pm.environment.set(\"repo\", response.name);",
							"",
							"pm.environment.unset(\"randomString\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{repoName}}\" ,\r\n  \"description\": \"{{repoDesc}}\",\r\n  \"private\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/repos?name={{repoName}}&description={{repoDesc}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"repos"
					],
					"query": [
						{
							"key": "name",
							"value": "{{repoName}}"
						},
						{
							"key": "description",
							"value": "{{repoDesc}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getCreatedRepository",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a552eb67-d572-468c-95e5-cc5fff4facd1",
						"exec": [
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "330ea496-c20c-48ce-be67-b9ed3e91f34b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/user/repos",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "createGitHubIssue",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b7719f26-a9a8-4402-841f-b94f2c192796",
						"exec": [
							"pm.environment.set(\"issueTitle\", \"Found a bug\");",
							"pm.environment.set(\"issueBody\", \"This issue has been created automatically by Postman\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bc9b117a-bc39-4361-acc3-b9a788a48531",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.environment.set(\"issue_number\", response.number);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{issueTitle}}\",\r\n  \"body\": \"{{issueBody}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/repos/:owner/:repo/issues?title={{issueTitle}}&body={{issueBody}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						":owner",
						":repo",
						"issues"
					],
					"query": [
						{
							"key": "title",
							"value": "{{issueTitle}}"
						},
						{
							"key": "body",
							"value": "{{issueBody}}"
						}
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getCreatedIssue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2dddfec0-a63d-4224-a0f5-08cfdc0ad7c6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var response = pm.response.json();",
							"",
							"pm.test(\"expectedIssueTitleIsFoundABug\", function () {",
							"    pm.expect(response.title).to.eql(pm.environment.get(\"issueTitle\"));",
							"});",
							"",
							"",
							"pm.environment.set(\"commentsNumber\", response.labels.comments);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/repos/:owner/:repo/issues/:issue_number",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						":owner",
						":repo",
						"issues",
						":issue_number"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						},
						{
							"key": "issue_number",
							"value": "{{issue_number}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "createComment",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8341431b-67e4-4759-aa7b-9ba64c084b56",
						"exec": [
							" ",
							"let currentCommentNumber = pm.environment.get(\"commentsNumber\"); ",
							"",
							"",
							"if (currentCommentNumber < 1 || currentCommentNumber === null) {",
							"    pm.environment.set(\"commentText\", \"Thank you for reporting this issue. I will look into it as soon as possible.\");}",
							"",
							"    ",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "22ec9ef0-b4e6-475a-8cc9-6e82234b6059",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"pm.environment.set(\"commentText\", response.body);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"body\": \"{{commentText}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/repos/:owner/:repo/issues/:issue_number/comments",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						":owner",
						":repo",
						"issues",
						":issue_number",
						"comments"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						},
						{
							"key": "issue_number",
							"value": "{{issue_number}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getlistCommentsOnIssue",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b172de0c-bab5-468b-9fec-25f980f86340",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/repos/:owner/:repo/issues/:issue_number/comments",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						":owner",
						":repo",
						"issues",
						":issue_number",
						"comments"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						},
						{
							"key": "issue_number",
							"value": "{{issue_number}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteRepository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e2c38ac3-d0c7-4a6b-afbe-7ac8b28c711d",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/repos/:owner/:repo",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getDeletedRepository",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8669488-28b4-4546-8530-2eca0034d78a",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.environment.unset(\"repoDesc\");",
							"pm.environment.unset(\"repoName\");",
							"pm.environment.unset(\"owner\");",
							"pm.environment.unset(\"issueBody\");",
							"pm.environment.unset(\"issueTitle\");",
							"pm.environment.unset(\"repo\");",
							"pm.environment.unset(\"issue_number\");",
							"pm.environment.unset(\"commentsNumber\");",
							"pm.environment.unset(\"commentText\");",
							"pm.environment.unset(\"randomString\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{githubPassword}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{gitHubUser}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-GitHub-OTP",
						"value": "{{otpCode}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/repos/:owner/:repo",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repo}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "312b83e3-d007-4de4-adec-89f8da5487fb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c8c1efd2-b99a-4820-af8b-b19ae4b58c48",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "00161ce5-93c4-450f-aa1f-e0594b220222",
			"key": "url",
			"value": "",
			"type": "string"
		},
		{
			"id": "c36be4a3-202d-4c9d-b026-49b74468141a",
			"key": "twilioAccount",
			"value": "",
			"type": "string"
		},
		{
			"id": "9ad32517-b269-475b-a648-3d7bedabdd37",
			"key": "twilioToken",
			"value": "",
			"type": "string"
		},
		{
			"id": "2a246f14-a3d5-4fa2-aac4-70c6aefc6ca2",
			"key": "twilioKey",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}